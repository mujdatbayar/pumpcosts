/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication.ui;

import java.util.Vector;
import javaapplication.Cost;
import javaapplication.CostDefaultTableModel;
import javaapplication.MyDefaultTableModel;
import javaapplication.PercentageCost;
import javaapplication.UserDefinedCost;
import javax.swing.JComboBox;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author soner
 */
public class CostPanel extends javax.swing.JPanel {

    private String selection = "Percentage";
    private int yearCount = 0;
    /**
     * Creates new form CostPanel
     */
    public CostPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CostCB = new javax.swing.JComboBox();
        costTablePane = new javax.swing.JScrollPane();
        costTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        baseValue = new javax.swing.JTextField();
        percentage = new javax.swing.JTextField();

        setToolTipText("");
        setName("costPanel"); // NOI18N

        CostCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Percentage", "User Defined" }));
        CostCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CostCBActionPerformed(evt);
            }
        });

        costTablePane.setBorder(null);

        costTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        costTable.getTableHeader().setReorderingAllowed(false);
        costTablePane.setViewportView(costTable);

        jLabel4.setText("Base Year Cost ($)");

        jLabel5.setText("Increase Percent(%)");

        baseValue.setText("0");
        baseValue.setToolTipText("");
        baseValue.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        baseValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                baseValueActionPerformed(evt);
            }
        });

        percentage.setText("0");
        percentage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                percentageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(baseValue, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(percentage, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(baseValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(percentage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CostCB, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(costTablePane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(CostCB, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(costTablePane, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(101, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("costPanel");
    }// </editor-fold>//GEN-END:initComponents

    private void CostCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CostCBActionPerformed
        JComboBox cb = (JComboBox)evt.getSource();
        selection = (String)cb.getSelectedItem();
        updateCostPanel(selection);
    }//GEN-LAST:event_CostCBActionPerformed

    private void baseValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baseValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_baseValueActionPerformed

    private void percentageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_percentageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_percentageActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox CostCB;
    private javax.swing.JTextField baseValue;
    private javax.swing.JTable costTable;
    private javax.swing.JScrollPane costTablePane;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField percentage;
    // End of variables declaration//GEN-END:variables

    private void updateCostPanel(String selection) {
        if(selection.equals("Percentage")) {
            costTablePane.setVisible(false);
            jPanel1.setVisible(true);
        }
        else {
            costTablePane.setVisible(true);
            jPanel1.setVisible(false);
        }
    }
    
    public Cost getCost() {
        javaapplication.Cost newCost;
        if(selection.equals("Percentage")) {
            newCost = new PercentageCost(yearCount);
            ((PercentageCost)newCost).setBaseValue(Double.parseDouble(baseValue.getText()));
            ((PercentageCost)newCost).setPercentage(Integer.parseInt(percentage.getText()));
            return newCost;
        }
        else {
            newCost = new UserDefinedCost(yearCount);
            Vector<Double> values = new Vector<Double>();
            int rc = costTable.getRowCount();
            for(int i =0; i<rc; i++) {
                double value = (Double)costTable.getValueAt(i, 1);
                values.add(value);
            }
            ((UserDefinedCost)newCost).setCostValues(values);
            return newCost;
        }
        
    }
    
    public void initCostPanel(Cost cost, int yearCnt, String costString) {
        yearCount = yearCnt;
        if(cost instanceof PercentageCost) {
            PercentageCost pCost = (PercentageCost)cost;
            baseValue.setText(Double.toString(pCost.getBaseValue()));
            percentage.setText(Integer.toString(pCost.getPercentage()));
            CostDefaultTableModel model = new CostDefaultTableModel();
            Vector<Integer> years = new Vector<Integer>();
            Vector<Double> values = new Vector<Double>();
            for(int i = 0; i< yearCount; i++) {
                years.add(i+1);
                values.add(0.0);
            }
            model.addColumn("Year", years);
            model.addColumn(costString + " ($)", values);
            costTable.setModel(model);
            CostCB.setSelectedIndex(0);
        }
        else {
            UserDefinedCost udCost = (UserDefinedCost)cost;
            baseValue.setText(Double.toString(0));
            percentage.setText(Integer.toString(0));
            CostDefaultTableModel model = new CostDefaultTableModel();
            Vector<Integer> years = new Vector<Integer>();
            Vector<Double> values;
            if(udCost != null && udCost.getCostValues() != null)
            {
                values = udCost.getCostValues();
            }
            else {
                values = new Vector<Double>();
            }
            
            for(int i = 0; i< yearCount; i++) {
                years.add(i+1);
                if(i >= values.size()) {
                    values.add(0.0);
                }
            }
            model.addColumn("Year", years);
            model.addColumn(costString + " ($)", values);
            costTable.setModel(model);
            CostCB.setSelectedIndex(1);
        }
        
    }
}
